[tool:pytest]
# Pytest configuration for comprehensive testing

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=app
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=90
    --junitxml=test-results.xml

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    performance: Performance tests
    security: Security tests
    slow: Slow running tests
    api: API tests
    utils: Utility function tests
    frontend: Frontend tests
    mobile: Mobile-specific tests
    accessibility: Accessibility tests

# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Coverage configuration
[coverage:run]
source = app
omit = 
    */tests/*
    */venv/*
    */node_modules/*
    */__pycache__/*
    */migrations/*
    */config.py
    */wsgi*.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
title = Letta Chatbot Flask Test Coverage

# Test environment variables
env = 
    FLASK_ENV = testing
    LETTA_API_KEY = test-api-key
    LETTA_BASE_URL = http://test-letta-server:8283
    USE_COOKIE_BASED_AUTHENTICATION = true
    WTF_CSRF_ENABLED = false
    SECRET_KEY = test-secret-key
